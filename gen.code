.IFJcode20
DEFVAR GF@_
DEFVAR GF@str1
DEFVAR GF@str2
DEFVAR GF@strRes
DEFVAR GF@tmpDividingByZero
JUMP enderror9
LABEL error9
EXIT int@9
LABEL enderror9
JUMP $$main
LABEL $inputs
PUSHFRAME
DEFVAR LF@retval
DEFVAR LF@retval$1
READ LF@retval string
DEFVAR LF@retval_check
TYPE LF@retval_check LF@retval
JUMPIFNEQ $INPUTS_END LF@retval_check string@string
PUSHS LF@retval
MOVE LF@retval$1 int@0
PUSHS LF@retval$1
JUMP $END_INPUTS
LABEL $INPUTS_END
PUSHS LF@retval
MOVE LF@retval$1 int@1
PUSHS LF@retval$1
LABEL $END_INPUTS
POPFRAME
RETURN

LABEL $inputi
PUSHFRAME
DEFVAR LF@retval
DEFVAR LF@retval$1
READ LF@retval int
DEFVAR LF@retval_check
TYPE LF@retval_check LF@retval
JUMPIFNEQ $INPUTI_END LF@retval_check string@int
PUSHS LF@retval
MOVE LF@retval$1 int@0
PUSHS LF@retval$1
JUMP $END_INPUTI
LABEL $INPUTI_END
PUSHS LF@retval
MOVE LF@retval$1 int@1
PUSHS LF@retval$1
LABEL $END_INPUTI
POPFRAME
RETURN

LABEL $inputf
PUSHFRAME
DEFVAR LF@retval
DEFVAR LF@retval$1
DEFVAR LF@retval_check
READ LF@retval float
TYPE LF@retval_check LF@retval
JUMPIFNEQ $INPUTF_END LF@retval_check string@float
PUSHS LF@retval
MOVE LF@retval$1 int@0
PUSHS LF@retval$1
JUMP $END_INPUTF
LABEL $INPUTF_END
MOVE LF@retval nil@nil
PUSHS LF@retval
MOVE LF@retval$1 int@1
PUSHS LF@retval$1
LABEL $END_INPUTF
POPFRAME
RETURN

LABEL $len
PUSHFRAME
DEFVAR LF@retval
DEFVAR LF@param1
MOVE LF@param1 LF@s$0
STRLEN LF@retval LF@param1
PUSHS LF@retval
POPFRAME
RETURN

LABEL $float2int
PUSHFRAME
DEFVAR LF@retval
DEFVAR LF@param$1
MOVE LF@param$1 LF@f$0
FLOAT2INT LF@retval LF@param$1
PUSHS LF@retval
POPFRAME
RETURN

LABEL $int2float
PUSHFRAME
DEFVAR LF@retval
DEFVAR LF@param$1
MOVE LF@param$1 LF@i$0
INT2FLOAT LF@retval LF@param$1
PUSHS LF@retval
POPFRAME
RETURN

LABEL $substr
PUSHFRAME
DEFVAR LF@retval
DEFVAR LF@retval$1
DEFVAR LF@string
DEFVAR LF@from
DEFVAR LF@length_of_str
DEFVAR LF@length
DEFVAR LF@length_helper
DEFVAR LF@char
DEFVAR LF@new_strlen
MOVE LF@retval string@
MOVE LF@string LF@s$0
MOVE LF@from LF@i$0
MOVE LF@length_of_str LF@n$0
MOVE LF@length_helper int@0
STRLEN LF@length LF@string
SUB LF@new_strlen LF@length int@1
DEFVAR LF@result
LT LF@result LF@length_of_str int@0
JUMPIFEQ $SUBSTR_END LF@result bool@true
EQ LF@result LF@length_of_str int@0
JUMPIFEQ $SUBSTR_EMPTY LF@result bool@true
LT LF@result LF@from int@0
JUMPIFEQ $SUBSTR_END LF@result bool@true
GT LF@result LF@from LF@new_strlen
JUMPIFEQ $SUBSTR_END LF@result bool@true
ADD LF@length_helper LF@length_helper LF@from
ADD LF@length_helper LF@length_helper LF@length_of_str
GT LF@result LF@length_helper LF@length
JUMPIFEQ $SUBSTR_LEN LF@result bool@true
JUMP $for_loop
LABEL $SUBSTR_LEN
MOVE LF@length_helper LF@length
LABEL $for_loop
JUMPIFEQ $SUBSTR_RET_0 LF@length_helper LF@from
GETCHAR LF@char LF@string LF@from
CONCAT LF@retval LF@retval LF@char
ADD LF@from LF@from int@1
JUMP $for_loop
LABEL $SUBSTR_RET_0
PUSHS LF@retval
MOVE LF@retval$1 int@0
PUSHS LF@retval$1
JUMP $END
LABEL $SUBSTR_END
MOVE LF@retval nil@nil
PUSHS LF@retval
MOVE LF@retval$1 int@1
PUSHS LF@retval$1
LABEL $END
POPFRAME
RETURN

LABEL $SUBSTR_EMPTY
MOVE LF@retval string@
PUSHS LF@retval
MOVE LF@retval$1 int@0
PUSHS LF@retval$1
JUMP $END

LABEL $ord
PUSHFRAME
DEFVAR LF@string
DEFVAR LF@int
DEFVAR LF@length
DEFVAR LF@right_int
DEFVAR LF@retval
DEFVAR LF@retval$1
MOVE LF@string LF@s$0
MOVE LF@int LF@i$0

STRLEN LF@length LF@string
SUB LF@length LF@length int@1
GT LF@right_int LF@int LF@length
JUMPIFEQ $ORD_END LF@right_int bool@true
LT LF@right_int LF@int int@0
JUMPIFEQ $ORD_END LF@right_int bool@true
STRI2INT LF@retval LF@string LF@int
PUSHS LF@retval
MOVE LF@retval$1 int@0
PUSHS LF@retval$1
JUMP $ORD_RET
LABEL $ORD_END
MOVE LF@retval nil@nil
PUSHS LF@retval
MOVE LF@retval$1 int@1
PUSHS LF@retval$1
LABEL $ORD_RET
POPFRAME
RETURN

LABEL $chr
PUSHFRAME
DEFVAR LF@int
DEFVAR LF@right_int
DEFVAR LF@retval
DEFVAR LF@retval$1
MOVE LF@int LF@i$0
LT LF@right_int LF@int int@0
JUMPIFEQ $CHR_END LF@right_int bool@true
GT LF@right_int LF@int int@255
JUMPIFEQ $CHR_END LF@right_int bool@true
INT2CHAR LF@retval LF@int
PUSHS LF@retval
MOVE LF@retval$1 int@0
PUSHS LF@retval$1
JUMP $CHR_RET
LABEL $CHR_END
MOVE LF@retval nil@nil
PUSHS LF@retval
MOVE LF@retval$1 int@1
PUSHS LF@retval$1
LABEL $CHR_RET
POPFRAME
RETURN

LABEL $$main
CREATEFRAME
PUSHFRAME

DEFVAR LF@vysl$1  #defines
DEFVAR LF@a$0  #defines
WRITE string@Zadejte\032cislo\032pro\032vypocet\032faktorialu:\032
PUSHS int@0

POPS LF@a$0
CREATEFRAME
CALL $inputi
POPS GF@_
POPS LF@a$0
PUSHS LF@a$0
PUSHS int@0
LTS

PUSHS bool@true
JUMPIFNEQS $main$if$1$else
WRITE string@Faktorial\032nejde\032spocitat!\010
JUMP $main$if$1$end
LABEL $main$if$1$else
PUSHS int@1

POPS LF@vysl$1
LABEL $main$for$7
PUSHS LF@a$0
PUSHS int@0
GTS

PUSHS bool@true
JUMPIFEQS $main$for$5
JUMP $main$for$4
LABEL $main$for$6
PUSHS LF@a$0
PUSHS int@1
SUBS

POPS LF@a$0
JUMP $main$for$7
LABEL $main$for$5
PUSHS LF@vysl$1
PUSHS LF@a$0
MULS

POPS LF@vysl$1
JUMP $main$for$6
LABEL $main$for$4
WRITE string@Vysledek\032je\032
WRITE LF@vysl$1
WRITE string@\010
LABEL $main$if$1$end
POPFRAME

JUMP $END_OF_PROGRAM
LABEL $END_OF_PROGRAM
